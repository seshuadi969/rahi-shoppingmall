pipeline {
    agent any
    
    triggers {
        pollSCM('H/5 * * * *')
    }
    
    environment {
        NODE_VERSION = '18'
        VERCEL_TOKEN = credentials('vercel-token')
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Setup') {
            steps {
                dir('frontend') {
                    sh '''
                        npm ci
                        echo "âœ… Frontend setup completed"
                    '''
                }
            }
        }
        
        stage('Build & Test') {
            steps {
                dir('frontend') {
                    sh '''
                        npm run build
                        npm test || echo "No tests configured"
                        echo "âœ… Frontend build completed"
                    '''
                }
            }
        }
        
        stage('Deploy to Staging') {
            when {
                branch 'develop'
            }
            steps {
                dir('frontend') {
                    sh '''
                        echo "ðŸš€ Deploying to Staging..."
                        npm install -g vercel
                        vercel --token ${VERCEL_TOKEN} --confirm
                        echo "âœ… Staging deployment successful"
                    '''
                }
            }
        }
        
        stage('Deploy to Production') {
            when {
                branch 'main'
            }
            steps {
                input message: 'Deploy to Production?', ok: 'Deploy'
                dir('frontend') {
                    sh '''
                        echo "ðŸš€ Deploying to Production..."
                        npm install -g vercel
                        vercel --prod --token ${VERCEL_TOKEN} --confirm
                        echo "âœ… Production deployment successful"
                    '''
                }
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
    }
}
