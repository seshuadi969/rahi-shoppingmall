pipeline {
    agent any
    
    environment {
        NODE_VERSION = '18'
        DOCKER_IMAGE = 'rahi-shopping-backend'
        DOCKER_TAG = "${env.BUILD_NUMBER}"
        RAILWAY_TOKEN = credentials('railway-token')
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
                sh 'echo "üì¶ Checking out code from ${env.GIT_URL}"'
            }
        }
        
        stage('Setup Node.js') {
            steps {
                sh """
                    node --version
                    npm --version
                    echo "‚úÖ Node.js environment setup"
                """
            }
        }
        
        stage('Install Dependencies') {
            steps {
                dir('backend') {
                    sh """
                        npm ci
                        echo "‚úÖ Dependencies installed"
                    """
                }
            }
        }
        
        stage('Code Quality Check') {
            steps {
                dir('backend') {
                    sh """
                        echo "üîç Running code quality checks..."
                        npx eslint src/ --no-error-on-unmatched-pattern || echo "ESLint completed"
                        npm audit --audit-level high || true
                    """
                }
            }
        }
        
        stage('Test') {
            steps {
                dir('backend') {
                    sh """
                        echo "üß™ Running tests..."
                        npm test || echo "No tests configured"
                    """
                }
            }
        }
        
        stage('Build') {
            steps {
                dir('backend') {
                    sh """
                        echo "üèóÔ∏è Building application..."
                        npm run build --if-present || echo "No build script"
                    """
                }
            }
        }
        
        stage('Deploy to Railway') {
            when {
                branch 'main'
            }
            steps {
                dir('backend') {
                    sh """
                        echo "üöÄ Deploying to Railway..."
                        # Install Railway CLI
                        npm install -g @railway/cli
                        
                        # Deploy using Railway
                        railway up --service backend --token ${RAILWAY_TOKEN}
                        
                        echo "‚úÖ Deployment initiated"
                    """
                }
            }
        }
        
        stage('Health Check') {
            when {
                branch 'main'
            }
            steps {
                script {
                    // Wait for deployment to complete
                    sleep 30
                    
                    // Health check
                    sh """
                        curl -f https://\${RAILWAY_PROJECT_NAME}.up.railway.app/api/health || exit 1
                        echo "‚úÖ Backend health check passed"
                    """
                }
            }
        }
    }
    
    post {
        always {
            echo "üéâ Backend CI/CD pipeline completed"
            cleanWs()
        }
        success {
            slackSend(
                channel: '#deployments',
                message: "‚úÖ Backend deployed successfully! Build: ${env.BUILD_URL}"
            )
        }
        failure {
            slackSend(
                channel: '#deployments', 
                message: "‚ùå Backend deployment failed! Build: ${env.BUILD_URL}"
            )
        }
    }
}
